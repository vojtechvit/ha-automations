blueprint:
  name: Hue-like motion-activated lights
  description:
    Turn on a light scene when motion is detected and it is dark enough.
    Light brightness is lowered to half for a configured duration before
    a complete shutdown.

    If the night scene is specified, it will be used in the specified
    day time range instead of the default scene.

    If the occupancy status is specified, the lights won't be turned off
    while the status indicates active occupancy.
  domain: automation
  source_url: https://www.example.org
  input:
    motion_entity_id:
      name: Motion Sensor
      description: The motion sensor used to trigger the lights.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    occupancy_entity_id:
      name: Occupancy status
      description: Determines whether the area is occupied and therefore whether
        the lights should not be turned off. Optional.
      default: "input_select.none"
      selector:
        entity:
          domain: input_select
    occupancy_status_occupied:
      name: Occupied status name
      description: The occupancy indicator option name representing an occupied status
      default: Occupied
      selector:
        text:
    lightsensor_entity_id:
      name: Illuminance Sensor
      description:
        The illuminance sensor to check whether the lights even need to
        be turned on.
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    illuminace_level:
      name: Max Illuminance
      description:
        Maximal immuminance level in lux. If illuminance is higher, light
        will not be enabled
      default: 50
      selector:
        number:
          min: 0.0
          max: 5000.0
          unit_of_measurement: lux
          step: 1.0
          mode: slider
    light_entity_id:
      name: Light
      description: The light or the group of lights to be turned on/off.
      selector:
        entity:
          domain: light
    day_scene_entity_id:
      name: Scene for the day (required)
      description: The default scene to be used to turn on the lights.
      selector:
        entity:
          domain: scene
    night_scene_entity_id:
      name: Scene for the night
      description: The scene to be used during night time. Optional.
      default: "scene.none"
      selector:
        entity:
          domain: scene
    night_scene_start_time:
      name: Start time for the night scene
      description: After this time of day the night scene will be used.
      default: "23:00:00"
      selector:
        time: null
    night_scene_end_time:
      name: End time for the night scene
      description: Until this time of day the night scene will be used.
      default: "07:00:00"
      selector:
        time: null
    no_motion_wait_duration:
      name: Wait time
      description: Time to leave the light on after the last motion was detected.
      default: 20
      selector:
        number:
          min: 0.0
          max: 3600.0
          unit_of_measurement: seconds
          step: 1.0
          mode: slider
    lower_brightness_duration:
      name: Lower brightness duration
      description: Additional time to leave the light on at 50 % of
        the original brightness after the last motion was detected.
      default: 10
      selector:
        number:
          min: 0.0
          max: 300.0
          unit_of_measurement: seconds
          step: 1.0
          mode: slider
    transition_duration:
      name: Light transition duration
      description: The transition time to enter the scene, to change
        the brightness or to turn off the lights.
      default: 2
      selector:
        number:
          min: 0.0
          max: 10.0
          unit_of_measurement: seconds
          step: 1.0
          mode: slider
mode: single
max_exceeded: silent
variables:
  occupancy_entity_id: !input "occupancy_entity_id"
  night_scene_entity_id: !input "night_scene_entity_id"
  light_entity_id: !input "light_entity_id"
trigger:
  platform: state
  entity_id: !input "motion_entity_id"
  to: "on"
condition:
  - condition: or
    conditions:
      - condition: numeric_state
        entity_id: !input "lightsensor_entity_id"
        below: !input "illuminace_level"
      - condition: state
        entity_id: !input "light_entity_id"
        state: "on"
action:
  - alias: "Repeat until a trigger timeout is reached"
    repeat:
      sequence:
        - choose:
            - alias: "If night time"
              conditions:
                - "{{ night_scene_entity_id != 'scene.none' }}"
                - condition: or
                  conditions:
                    - condition: time
                      after: !input "night_scene_start_time"
                    - condition: time
                      before: !input "night_scene_end_time"
              sequence:
                - alias: "Turn on the night scene"
                  service: scene.turn_on
                  target:
                    entity_id: !input "night_scene_entity_id"
                  data:
                    transition: !input "transition_duration"
          default:
            - alias: "Turn on the day scene"
              service: scene.turn_on
              target:
                entity_id: !input "day_scene_entity_id"
              data:
                transition: !input "transition_duration"
        - choose:
            - alias: "If the movement has not yet stopped"
              conditions:
                - condition: state
                  entity_id: !input "motion_entity_id"
                  state: "on"
              sequence:
                - alias: "Wait till the movement stops"
                  wait_for_trigger:
                    platform: state
                    entity_id: !input "motion_entity_id"
                    from: "on"
        - alias: "Repeat until a trigger timeout is reached"
          repeat:
            sequence:
              - choose:
                  - alias: "If occupied"
                    conditions:
                      - "{{ occupancy_entity_id != 'input_select.none' }}"
                      - condition: state
                        entity_id: !input "occupancy_entity_id"
                        state: !input "occupancy_status_occupied"
                    sequence:
                      - alias: "Wait till unoccupied"
                        wait_for_trigger:
                          platform: state
                          entity_id: !input "occupancy_entity_id"
                          from: !input "occupancy_status_occupied"
              - alias: "Wait till another movement or a timeout"
                wait_for_trigger:
                  platform: state
                  entity_id: !input "motion_entity_id"
                  to: "on"
                timeout: !input "no_motion_wait_duration"
              - choose:
                  - alias: "If another movement"
                    conditions: "{{ wait.trigger != none }}"
                    sequence:
                      - alias: "Wait till the movement stops"
                        wait_for_trigger:
                          platform: state
                          entity_id: !input "motion_entity_id"
                          from: "on"
            until: "{{ wait.trigger == none }}"
        - condition: not
          conditions:
            - condition: state
              entity_id: !input "light_entity_id"
              state: "off"
        - service: light.turn_on
          target:
            entity_id: !input "light_entity_id"
          data:
            brightness: "{{ (state_attr(light_entity_id, 'brightness') | float / 2) | round }}"
            transition: !input "transition_duration"
        - alias: "Wait till another movement or a timeout"
          wait_for_trigger:
            platform: state
            entity_id: !input "motion_entity_id"
            to: "on"
          timeout: !input "lower_brightness_duration"
      until: "{{ wait.trigger == none }}"
  - service: light.turn_off
    target:
      entity_id: !input "light_entity_id"
    data:
      transition: !input "transition_duration"
